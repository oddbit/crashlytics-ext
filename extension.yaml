name: firebase-alerts
version: 0.0.15
specVersion: v1beta
billingRequired: true
license: Apache-2.0

displayName: Firebase Alerts
description: Empower your team with timely Firebase notifications sent directly to your preferred communication platform.
icon: icon.png
tags: [messaging, utilities]

author:
  authorName: Oddbit
  email: opensource@oddbit.id
  url: https://oddbit.id/

sourceUrl: https://github.com/oddbit/firebase-alerts
releaseNotesUrl: https://github.com/oddbit/firebase-alerts/blob/main/CHANGELOG.md


params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      You usually want a location close to your database. For help selecting a
      location, refer to the 
      [location selection guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: LANGUAGE
    label: Language
    description: The language for webhook messages
    type: select
    options:
      - label: English
        value: en
    default: en
    required: true
    immutable: false

  - param: APP_ID
    label: Firebase App ID
    description: The Firebase app ID from console (e.g `1:269808624035:android:296863cf1f5b6817c87a16`)
    type: string
    required: true
    immutable: false

  - param: APP_BUNDLE_ID
    label: Bundle ID 
    description: |
      The app bundle ID as identified by your build configuration (e.g `id.oddbit.hello_world`)

      For web apps this is a random string that you will have to look for in
      URL when you are selecting the web app in the Firebase settings page.

      Look for the last part of the URL where `your-web-app-bundle-id` is your
      web app's "bundle id". Go to the console to find something like this: 
      https://console.firebase.google.com/project/${PROJECT_ID}/settings/general/web:{your-web-app-bundle-id}
    type: string
    required: true
    immutable: false

  - param: REPOSITORY_URL
    label: Repository URL
    description: URL to your git repository
    type: string
    required: false
    immutable: false

  - param: WEBHOOK_URL
    label: Webhook
    description: Webhook URL for Slack, Discord, or Google Chat
    type: secret
    required: true
    immutable: false

resources:
  - name: anr
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newAnrIssue

  - name: fatal
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newFatalIssue

  - name: nonfatal
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newNonfatalIssue

  - name: regression
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.regression

  - name: feedback
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: appDistribution.newTesterIosDevice

  - name: newIosDevice
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: appDistribution.inAppFeedback

  - name: threshold
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: performance.threshold

apis:
  - apiName: eventarc.googleapis.com
    reason: Powers all events and triggers
  - apiName: run.googleapis.com
    reason: Powers v2 functions
  - apiName: compute.googleapis.com
    reason: Powers v2 functions
