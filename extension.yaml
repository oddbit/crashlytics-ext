name: firebase-alerts
version: 0.0.13
specVersion: v1beta

displayName: Firebase Alerts
description: Firebase extension for sending Firebase Alerts to social platforms

license: Apache-2.0

author:
  authorName: Oddbit
  email: opensource@oddbit.id
  url: https://oddbit.id/

sourceUrl: https://github.com/oddbit/firebase-alerts
releaseNotesUrl: https://github.com/oddbit/firebase-alerts/blob/main/CHANGELOG.md

billingRequired: true

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      You usually want a location close to your database. For help selecting a
      location, refer to the 
      [location selection guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: LANGUAGE
    label: Language
    description: The language for webhook messages
    type: select
    options:
      - label: English
        value: en
    default: en
    required: true
    immutable: false

  - param: APP_CONFIG_COLLECTION
    label: Apps configuration collection
    description: The Firestore collection to keep apps configuration data.
    type: string
    default: firebase-alerts-apps-config
    required: true
    immutable: false

  - param: WEBHOOK_MANDATORY
    label: Mandatory webhook
    description: Mandatory webhook for Slack, Discord, or Google Chat
    type: secret
    required: true

  - param: WEBHOOK_OPTIONAL
    label: Optional webhook
    description: Optional, additional webhook for Slack, Discord, or Google Chat
    type: secret
    required: false

  - param: API_KEY_GEMENI
    label: Google Gemini API key
    description: You can create an API key in Google AI Studio.
    type: secret
    required: false

resources:
  - name: anr
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newAnrIssue

  - name: fatal
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newFatalIssue

  - name: nonfatal
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newNonfatalIssue

  - name: regression
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.regression

roles:
  - role: datastore.viewer
    reason: Allows the extension to read app and webhook configuration

apis:
  - apiName: eventarc.googleapis.com
    reason: Powers all events and triggers
  - apiName: run.googleapis.com
    reason: Powers v2 functions
  - apiName: compute.googleapis.com
    reason: Powers v2 functions
